<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.dev.thboard3.board.mapper.BoardMapper">

    <!--게시글 목록 조회-->
    <select id="selectBoardList" resultType="BoardVo">
        /* 게시글 목록 조회 */
         SELECT ROW_NUMBER() OVER(ORDER BY A.REG_DATE DESC) AS no
              , A.BOARD_SNO AS boardSno                          /* 게시글 순번 */
              , A.TITLE AS title                               /* 제목 */
              , A.CONTENT AS content                           /* 내용 */
              , A.USER_ID AS userId                            /* 작성자 아이디 */
              , B.USER_NAME AS userName 						   /* 작성자 */
              , A.USE_YN AS useYn                             /* 사용여부 */
              , TO_CHAR(A.REG_DATE, 'YYYY-MM-DD HH24:MI') AS regDate   /* 등록날짜 */
              , TO_CHAR(A.MOD_DATE, 'YYYY-MM-DD HH24:MI') AS modDate                          /* 수정날짜 */
              , A.REPLY_CNT AS replyCnt                        /* 댓글 개수 */
           FROM BOARD_INFO A
              , USER_INFO B
          <where>
                    A.USER_ID = B.USER_ID
                AND A.USE_YN = 'Y'
          </where>
    </select>

    <!--게시글 전체 카운트-->
    <select id="selectBoardCnt" parameterType="map" resultType="int">
        SELECT COUNT(*)
          FROM BOARD_INFO
        WHERE USE_YN = 'Y'
    </select>

    <!--게시글 상세-->
    <select id="selectBoardDetail" parameterType="map" resultType="BoardVo">
        /* 게시글 상세 조회 */
        SELECT A.BOARD_SNO AS boardSno
             , A.TITLE AS title
             , A.CONTENT AS content
             , A.USER_ID AS userId
             , B.USER_NAME AS userName
             , A.USE_YN AS useYn
             , A.REG_DATE AS regDate
             , A.MOD_DATE AS modDate
          FROM BOARD_INFO A
             , USER_INFO B
         WHERE BOARD_SNO = #{boardSno}
           AND A.USER_ID = B.USER_ID
    </select>

    <!--게시글 순번 시퀀스 조회-->
    <select id="selectMaxBoardSno" resultType="Long">
        SELECT BOARD_SNO_SEQ.NEXTVAL AS boardSno
          FROM DUAL
    </select>

    <!--게시글 등록/수정(merge) -->
    <insert id="mergeBoard" parameterType="BoardVo">
        /* 게시글 등록/수정 */
        MERGE INTO BOARD_INFO A
          USING DUAL ON(A.BOARD_SNO = #{boardSno})
        WHEN MATCHED THEN
        /* update */
        UPDATE
            <set>
                <if test="title != null and title != ''">
                TITLE = #{title}
                </if>
                <if test="content != null and content != ''">
                , CONTENT = #{content}
                </if>
                , MOD_DATE = SYSDATE
            </set>
         WHERE BOARD_SNO = #{boardSno}
        /* insert */
        WHEN NOT MATCHED THEN
        INSERT
            (
                BOARD_SNO
              , TITLE
              , CONTENT
              , USER_ID
              , REG_DATE
            )
        VALUES
            (
                #{boardSno}
              , #{title}
              , #{content}
              , #{userId}
              , SYSDATE
            )
    </insert>

    <!--게시글 삭제-->
    <update id="deleteBoard" parameterType="map">
        /* 게시글 삭제 */
        UPDATE BOARD_INFO
           SET USE_YN = 'N'
         WHERE BOARD_SNO = #{boardSno}
    </update>





</mapper>