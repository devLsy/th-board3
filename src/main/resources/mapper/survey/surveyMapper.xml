<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study.dev.thboard3.survey.mapper.SurveyMapper">

    <!-- (Ïô∏Î∂Ä)ÏÇ¨Ïö©ÏûêÍ∞Ä ÏùëÏãúÌïú ÏÑ§Î¨∏ Î™©Î°ù Ï°∞Ìöå -->
    <select id="selectExtSurveyList" parameterType="map" resultType="map">
    /* (Ïô∏Î∂Ä)ÏÇ¨Ïö©ÏûêÍ∞Ä ÏùëÏãúÌïú ÏÑ§Î¨∏ Î™©Î°ù Ï°∞Ìöå */
    WITH G AS (
        SELECT
            UA.COMPANY_NM,
            UA.USER_ID,
            UA.USER_NM,
            SA.SESSION_KEY,
            MAX(SA.ANSWER_AT) AS ANSWER_AT,
            SUM(SA.SELECTED_SCORE) AS SELECTED_SCORE
        FROM SURVEY_ANSWER SA
        JOIN USER_ACCOUNT UA
          ON UA.USER_ID = SA.USER_ID
        WHERE SA.USER_ID = #{userId} /* üîë Î°úÍ∑∏Ïù∏Ìïú ÏÇ¨Ïö©Ïûê ID Î∞îÏù∏Îî© */
        GROUP BY
            UA.COMPANY_NM,
            UA.USER_ID,
            UA.USER_NM,
            SA.SESSION_KEY
    )
    SELECT
      ROWNUM                 AS no,
      T.COMPANY_NM           AS companyNm,
      T.USER_ID              AS userId,
      T.USER_NM              AS userNm,
      T.SESSION_KEY AS sessionKey,
      T.ANSWER_AT             AS answerAt,
      T.SELECTED_SCORE            AS totalScore
    FROM (
      SELECT *
      FROM G
      ORDER BY G.ANSWER_AT DESC
    ) T
    </select>

    <!-- ÏÇ¨Ïö©Ïûê Î≥Ñ ÏÑ§Î¨∏ ÏÉÅÏÑ∏ Ï°∞Ìöå-->
    <select id="selectSurveyDetail" parameterType="map" resultType="map">
    /* ÏÑ§Î¨∏ ÏÉÅÏÑ∏ Ï°∞Ìöå */
    WITH base AS (
        SELECT
            SA.SESSION_KEY,
            UA.COMPANY_NM,
            UA.USER_ID,
            UA.USER_NM,
            SA.ANSWER_AT,
            SA.QUESTION_ID,
            SA.SELECTED_SCORE,
            QO.OPTION_TEXT
        FROM SURVEY_ANSWER SA
        JOIN USER_ACCOUNT     UA ON UA.USER_ID = SA.USER_ID
        JOIN QUESTION_OPTION  QO ON QO.OPTION_ID = SA.OPTION_ID
        WHERE SA.USER_ID    = #{userId} /* üîë ÏÇ¨Ïö©Ïûê ID Î∞îÏù∏Îî© */
          AND SA.SESSION_KEY = #{sessionKey} /* üîë ÏÑ∏ÏÖò ÌÇ§ Î∞îÏù∏Îî© */
    )
    SELECT
        MAX(company_nm) AS companyNm,
        MAX(user_id) AS userId,
        MAX(user_nm) AS userNm,
        MAX(ANSWER_AT) AS answerAt,
        SUM(NVL(SELECTED_SCORE,0)) AS totalScore,
        MAX(CASE WHEN QUESTION_ID = 42 THEN OPTION_TEXT END) AS Q1_UPJONG,
        MAX(CASE WHEN QUESTION_ID = 43 THEN OPTION_TEXT END) AS Q2_KUMO,
        MAX(CASE WHEN QUESTION_ID = 44 THEN OPTION_TEXT END) AS Q3_JIKCHEK,
        MAX(CASE WHEN QUESTION_ID = 45 THEN SELECTED_SCORE END) AS Q4_SCORE,
        MAX(CASE WHEN QUESTION_ID = 46 THEN SELECTED_SCORE END) AS Q5_SCORE,
        MAX(CASE WHEN QUESTION_ID = 47 THEN SELECTED_SCORE END) AS Q6_SCORE,
        MAX(CASE WHEN QUESTION_ID = 48 THEN SELECTED_SCORE END) AS Q7_SCORE,
        MAX(CASE WHEN QUESTION_ID = 49 THEN SELECTED_SCORE END) AS Q8_SCORE,
        MAX(CASE WHEN QUESTION_ID = 50 THEN SELECTED_SCORE END) AS Q9_SCORE
    FROM base
    GROUP BY SESSION_KEY, user_id
    </select>

    <!-- (ÎÇ¥Î∂Ä)Î™®Îì† ÏÇ¨Ïö©ÏûêÍ∞Ä ÏùëÏãúÌïú ÏÑ§Î¨∏Ï°∞ÏÇ¨ Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå(Î™®Îì† Î¨∏Ìï≠, ÏùëÎãµ Ï†êÏàò, Ï¥ùÌï©) -->
    <select id="selectIntSurveyList" parameterType="map" resultType="map">
    /* (ÎÇ¥Î∂Ä)Î™®Îì† ÏÇ¨Ïö©ÏûêÍ∞Ä ÏùëÏãúÌïú ÏÑ§Î¨∏Ï°∞ÏÇ¨ Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå(Î™®Îì† Î¨∏Ìï≠, ÏùëÎãµ Ï†êÏàò, Ï¥ùÌï©) */
    WITH G AS (
        SELECT
            -- üîë G CTE ÎÇ¥Î∂Ä: Î™®Îì† Ïª¨ÎüºÏóê Î≥ÑÏπ≠ÏùÑ Î™ÖÏãúÌïòÏó¨ Ïô∏Î∂Ä Ï∞∏Ï°∞Î•º Ïö©Ïù¥ÌïòÍ≤å Ìï®
            UA.COMPANY_NM AS COMPANYNM,
            UA.USER_ID AS USERID,
            UA.USER_NM AS USERNM,
            SA.SESSION_KEY AS SESSIONKEY,
            MAX(SA.ANSWER_AT) AS ANSWERAT,
            SUM(SA.SELECTED_SCORE) AS TOTALSCORE,

            -- Í∏∞Î≥∏ Ï†ïÎ≥¥ (ÌÖçÏä§Ìä∏)
            MAX(CASE WHEN SA.QUESTION_ID = 42 THEN QO.OPTION_TEXT END) AS Q1_UPJONG,
            MAX(CASE WHEN SA.QUESTION_ID = 43 THEN QO.OPTION_TEXT END) AS Q2_GYUMO,
            MAX(CASE WHEN SA.QUESTION_ID = 44 THEN QO.OPTION_TEXT END) AS Q3_JIKCHEK,

            -- ÏúÑÌóò Î∞è ÎåÄÏùë Ï†êÏàò (SCORE)
            MAX(CASE WHEN SA.QUESTION_ID = 45 THEN SA.SELECTED_SCORE END) AS Q4_SCORE,
            MAX(CASE WHEN SA.QUESTION_ID = 46 THEN SA.SELECTED_SCORE END) AS Q5_SCORE,
            MAX(CASE WHEN SA.QUESTION_ID = 47 THEN SA.SELECTED_SCORE END) AS Q6_SCORE,
            MAX(CASE WHEN SA.QUESTION_ID = 48 THEN SA.SELECTED_SCORE END) AS Q7_SCORE,
            MAX(CASE WHEN SA.QUESTION_ID = 49 THEN SA.SELECTED_SCORE END) AS Q8_SCORE,
            MAX(CASE WHEN SA.QUESTION_ID = 50 THEN SA.SELECTED_SCORE END) AS Q9_SCORE
        FROM SURVEY_ANSWER SA
        JOIN USER_ACCOUNT UA
          ON UA.USER_ID = SA.USER_ID
        JOIN QUESTION_OPTION QO
          ON SA.OPTION_ID = QO.OPTION_ID
        JOIN QUESTION Q
          ON SA.QUESTION_ID = Q.QUESTION_ID
        GROUP BY
            UA.COMPANY_NM, UA.USER_ID, UA.USER_NM, SA.SESSION_KEY
    ),
    S AS (
        -- üîë S CTE ÎÇ¥Î∂Ä: GÏùò Î™®Îì† Ïª¨ÎüºÏùÑ *Î™ÖÏãúÏ†ÅÏúºÎ°ú* Ï∞∏Ï°∞
        SELECT
          COMPANYNM,
          USERID,
          USERNM,
          ANSWERAT,
          TOTALSCORE,
          SESSIONKEY,
          Q1_UPJONG, Q2_GYUMO, Q3_JIKCHEK,
          Q4_SCORE, Q5_SCORE, Q6_SCORE, Q7_SCORE, Q8_SCORE, Q9_SCORE,
          ROW_NUMBER() OVER (PARTITION BY USERID ORDER BY ANSWERAT ASC) AS attemptRank
        FROM G
        ORDER BY USERID, ANSWERAT DESC
    )
    SELECT
            ROWNUM AS no,
            S.attemptRank AS attemptRank,
            S.COMPANYNM AS companyNm,
            S.USERID AS userId,
            S.USERNM AS userNm,
            S.ANSWERAT AS answerAt,
            S.TOTALSCORE AS totalScore,
            S.Q1_UPJONG, S.Q2_GYUMO, S.Q3_JIKCHEK,
            S.Q4_SCORE, S.Q5_SCORE, S.Q6_SCORE, S.Q7_SCORE, S.Q8_SCORE, S.Q9_SCORE
    FROM S
    </select>

    <!-- ÏÑ§Î¨∏ ÏùëÎãµ -->
    <insert id="insertSurveyAnswers" parameterType="list">
    /* * ÏµúÏ†ÅÌôîÎêú ÏÑ§Î¨∏ ÏùëÎãµ Ï†ÄÏû• (Multi-Row INSERT)
     * - UNION ALLÏùÑ ÏÇ¨Ïö©ÌïòÏó¨ ÌïòÎÇòÏùò SQL Î¨∏ÏúºÎ°ú Ïó¨Îü¨ Ìñâ ÏÇΩÏûÖ
     * - ORA-00933, ORA-00001 (Î¨¥Í≤∞ÏÑ±) Ïò§Î•ò Î∞©ÏßÄ
     */

    INSERT INTO SURVEY_ANSWER (
        USER_ID, SESSION_KEY, QUESTION_ID, OPTION_ID, SELECTED_SCORE
    )
    SELECT
        T.USER_ID, T.SESSION_KEY, T.QUESTION_ID, T.OPTION_ID, T.SELECTED_SCORE
    FROM
    (
        <foreach collection="list" item="item" separator=" UNION ALL ">
            SELECT
                #{item.userId} AS USER_ID,
                #{item.sessionKey} AS SESSION_KEY,
                #{item.questionId} AS QUESTION_ID,
                #{item.optionId} AS OPTION_ID,
                NVL(#{item.selectedScore, jdbcType=NUMERIC}, 0) AS SELECTED_SCORE
            FROM DUAL
        </foreach>
    ) T
    </insert>

    <select id="selectMaxSessionKeyNumber" resultType="int">
    /* ÌäπÏ†ï ÏÇ¨Ïö©ÏûêÏùò SESSION_KEY ÏµúÎåÄ ÏàúÎ≤à Ï°∞Ìöå */
    SELECT
        NVL(
            MAX(
                TO_NUMBER(SUBSTR(SA.SESSION_KEY, INSTR(SA.SESSION_KEY, '_') + 1))
            ),
            0
        )
    FROM
        SURVEY_ANSWER SA
    WHERE
        SA.USER_ID = #{userId}
    </select>

</mapper>